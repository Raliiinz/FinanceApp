Index: feature/income/src/main/java/com/example/financeapp/income/screen/IncomeScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.financeapp.income.screen\r\n\r\nimport android.os.Build\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.PaddingValues\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.LaunchedEffect\r\nimport androidx.compose.runtime.collectAsState\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.ui.res.stringResource\r\nimport com.example.financeapp.base.R\r\nimport com.example.financeapp.base.commonItems.BaseFloatingActionButton\r\nimport com.example.financeapp.base.commonItems.ErrorDialog\r\nimport com.example.financeapp.base.commonItems.LoadingContent\r\nimport com.example.financeapp.income.components.IncomeListContent\r\nimport com.example.financeapp.income.state.IncomeEvent\r\nimport com.example.financeapp.income.state.IncomeUiState\r\nimport java.time.LocalDate\r\nimport java.time.format.DateTimeFormatter\r\n\r\n@RequiresApi(Build.VERSION_CODES.O)\r\n@Composable\r\nfun IncomeScreen(\r\n    viewModel: IncomeScreenViewModel,\r\n    paddingValues: PaddingValues,\r\n    onIncomeClicked: (Int) -> Unit,\r\n    onFabClick: () -> Unit,\r\n) {\r\n    val uiState by viewModel.uiState.collectAsState()\r\n\r\n    LaunchedEffect(Unit) {\r\n        val dateFormatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")\r\n        val today = LocalDate.now()\r\n        val from = today.withDayOfMonth(1).format(dateFormatter)\r\n        val to = today.format(dateFormatter)\r\n        viewModel.loadIncomes(from, to)\r\n    }\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxSize()\r\n            .background(MaterialTheme.colorScheme.surface)\r\n    ) {\r\n        when (val state = uiState) {\r\n            IncomeUiState.Loading -> LoadingContent()\r\n            is IncomeUiState.Success -> IncomeListContent(\r\n                incomes = state.incomes,\r\n                paddingValues = paddingValues,\r\n                onIncomeClicked = onIncomeClicked\r\n            )\r\n            is IncomeUiState.Error -> {\r\n                ErrorDialog(\r\n                    message = stringResource((uiState as IncomeUiState.Error).messageRes),\r\n                    confirmButtonText = stringResource(R.string.repeat),\r\n                    dismissButtonText = stringResource(R.string.exit),\r\n                    onConfirm = { viewModel.reduce(IncomeEvent.ReloadData) },\r\n                    onDismiss = { viewModel.reduce(IncomeEvent.HideErrorDialog) }\r\n                )\r\n            }\r\n            IncomeUiState.Idle -> Unit\r\n        }\r\n\r\n        BaseFloatingActionButton(\r\n            onClick = onFabClick,\r\n            modifier = Modifier\r\n                .align(Alignment.BottomEnd)\r\n                .padding(\r\n                    end = 16.dp,\r\n                    bottom = paddingValues.calculateBottomPadding() + 14.dp\r\n                )\r\n        )\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/feature/income/src/main/java/com/example/financeapp/income/screen/IncomeScreen.kt b/feature/income/src/main/java/com/example/financeapp/income/screen/IncomeScreen.kt
--- a/feature/income/src/main/java/com/example/financeapp/income/screen/IncomeScreen.kt	(revision a5762be567f6a85803f584ae208697d55350ba63)
+++ b/feature/income/src/main/java/com/example/financeapp/income/screen/IncomeScreen.kt	(date 1750665629712)
@@ -38,10 +38,9 @@
 
     LaunchedEffect(Unit) {
         val dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd")
-        val today = LocalDate.now()
-        val from = today.withDayOfMonth(1).format(dateFormatter)
-        val to = today.format(dateFormatter)
-        viewModel.loadIncomes(from, to)
+        val date = LocalDate.now()
+        val to = date.format(dateFormatter)
+        viewModel.loadIncomes(to, to)
     }
 
     Box(
Index: feature/expenses/src/main/java/com/example/financeapp/expenses/screen/ExpensesScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.financeapp.expenses.screen\r\n\r\nimport android.os.Build\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.PaddingValues\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.LaunchedEffect\r\nimport androidx.compose.runtime.collectAsState\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.unit.dp\r\nimport com.example.financeapp.base.commonItems.BaseFloatingActionButton\r\nimport com.example.financeapp.expenses.component.ExpenseListContent\r\nimport com.example.financeapp.expenses.state.ExpensesUiState\r\nimport java.time.LocalDate\r\nimport java.time.format.DateTimeFormatter\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.res.stringResource\r\nimport com.example.financeapp.base.R\r\nimport com.example.financeapp.base.commonItems.ErrorContent\r\nimport com.example.financeapp.base.commonItems.ErrorDialog\r\nimport com.example.financeapp.base.commonItems.LoadingContent\r\nimport com.example.financeapp.expenses.state.ExpensesEvent\r\n\r\n@RequiresApi(Build.VERSION_CODES.O)\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\nfun ExpensesScreen(\r\n    viewModel: ExpensesScreenViewModel,\r\n    paddingValues: PaddingValues,\r\n    onExpenseClicked: (Int) -> Unit,\r\n    onFabClick: () -> Unit,\r\n) {\r\n    val uiState by viewModel.uiState.collectAsState()\r\n    val context = LocalContext.current\r\n\r\n    LaunchedEffect(Unit) {\r\n        val dateFormatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")\r\n        val today = LocalDate.now()\r\n        val from = today.withDayOfMonth(1).format(dateFormatter)\r\n        val to = today.format(dateFormatter)\r\n        viewModel.reduce(ExpensesEvent.LoadExpenses(from, to))\r\n    }\r\n\r\n    Box(\r\n        modifier = Modifier\r\n            .fillMaxSize()\r\n            .background(MaterialTheme.colorScheme.surface)\r\n    ) {\r\n        when (val state = uiState) {\r\n            ExpensesUiState.Loading -> LoadingContent()\r\n            is ExpensesUiState.Success -> ExpenseListContent(\r\n                expenses = state.transactions,\r\n                paddingValues = paddingValues,\r\n                onExpenseClicked = onExpenseClicked\r\n            )\r\n            is ExpensesUiState.Error -> {\r\n                ErrorDialog(\r\n                    message = context.getString(state.messageRes),\r\n                    confirmButtonText = stringResource(R.string.repeat),\r\n                    dismissButtonText = stringResource(R.string.exit),\r\n                    onConfirm = {\r\n                        val dateFormatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")\r\n                        val today = LocalDate.now()\r\n                        val from = today.withDayOfMonth(1).format(dateFormatter)\r\n                        val to = today.format(dateFormatter)\r\n                        viewModel.reduce(ExpensesEvent.LoadExpenses(from, to))\r\n                    },\r\n                    onDismiss = { viewModel.reduce(ExpensesEvent.HideErrorDialog) }\r\n                )\r\n            }\r\n            ExpensesUiState.Idle -> Unit\r\n        }\r\n\r\n        BaseFloatingActionButton(\r\n            onClick = onFabClick,\r\n            modifier = Modifier\r\n                .align(Alignment.BottomEnd)\r\n                .padding(\r\n                    end = 16.dp,\r\n                    bottom = paddingValues.calculateBottomPadding() + 14.dp\r\n                )\r\n        )\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/feature/expenses/src/main/java/com/example/financeapp/expenses/screen/ExpensesScreen.kt b/feature/expenses/src/main/java/com/example/financeapp/expenses/screen/ExpensesScreen.kt
--- a/feature/expenses/src/main/java/com/example/financeapp/expenses/screen/ExpensesScreen.kt	(revision a5762be567f6a85803f584ae208697d55350ba63)
+++ b/feature/expenses/src/main/java/com/example/financeapp/expenses/screen/ExpensesScreen.kt	(date 1750665629719)
@@ -43,10 +43,9 @@
 
     LaunchedEffect(Unit) {
         val dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd")
-        val today = LocalDate.now()
-        val from = today.withDayOfMonth(1).format(dateFormatter)
-        val to = today.format(dateFormatter)
-        viewModel.reduce(ExpensesEvent.LoadExpenses(from, to))
+        val date = LocalDate.now()
+        val to = date.format(dateFormatter)
+        viewModel.reduce(ExpensesEvent.LoadExpenses(to, to))
     }
 
     Box(
